/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GUI.java
 *
 * Created on 22-07-2011, 11:17:43 AM
 */
package Vista;

import CapaNegocio.Negocio;
import CapaNegocio.NegocioInsert;
import Model.Informante;
import Model.Participacion;
import Model.Principal;
import Model.Empresa;
import java.awt.Cursor;
import java.awt.Rectangle;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableColumn;
import jxl.Workbook;
import jxl.format.Alignment;
import jxl.format.Border;
import jxl.format.BorderLineStyle;
import jxl.format.Colour;
import jxl.format.PageOrientation;
import jxl.write.NumberFormat;
import jxl.write.WritableCellFormat;
import jxl.write.WritableFont;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import jxl.write.WriteException;

/**
 *
 * @author jvaldivia
 */
public class GUI extends javax.swing.JFrame {

    /** Creates new form GUI */
    public GUI() {
        initComponents();
        this.jftAño.setText(año.format(new Date()));

        this.cargaJCB();
        this.Fechas();
        this.jpBuscarPaciente.setVisible(false);

        jcbAgregarGrupo.removeAllItems();
        Iterator it2 = neg.ListarParticipacionGrupos().iterator();

        while (it2.hasNext()) {
            Informante inf = (Informante) it2.next();
            this.jcbAgregarGrupo.addItem(inf.getNombre().toUpperCase());
        }

    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
    SimpleDateFormat año = new SimpleDateFormat("yyyy");
    SimpleDateFormat fmes = new SimpleDateFormat("MM");
    Negocio neg = new Negocio();
    NegocioInsert ineg = new NegocioInsert();
    String pagado = "";
    int proceso = 0;

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        BtSalir = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jpBuscar = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtDatosPacientes = new javax.swing.JTable();
        jcbBuscarInformante = new javax.swing.JComboBox();
        jftAño = new javax.swing.JFormattedTextField();
        jbtBuscar = new javax.swing.JButton();
        jcbBuscarSucursal = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jcbMeses = new javax.swing.JComboBox();
        jcbBuscarEmpresa = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jpBuscarPaciente = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jtxtApePat = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jtxtApeMat = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jtxtNombre = new javax.swing.JTextField();
        jtxtCod = new javax.swing.JTextField();
        jrbtExtra = new javax.swing.JRadioButton();
        jpInsertarXls = new javax.swing.JPanel();
        BtCargar = new javax.swing.JButton();
        jProgressBar = new javax.swing.JProgressBar();
        jpParticipacion = new javax.swing.JPanel();
        jcbParticipacion = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtParticipacion = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jcbAgregarGrupo = new javax.swing.JComboBox();
        jtxtAgregarNombre = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jtxtAgregarParticipacion = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jftAgregarCodigo = new javax.swing.JFormattedTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jrbRetencion = new javax.swing.JRadioButton();
        jrbFijo = new javax.swing.JRadioButton();
        jpEmpresas = new javax.swing.JPanel();
        jcbEmpListar = new javax.swing.JComboBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtbEmpLista = new javax.swing.JTable();
        jcbEmpAgregar = new javax.swing.JComboBox();
        jtxtEmpCod = new javax.swing.JTextField();
        jbtEmpEliminar = new javax.swing.JButton();
        jbtEmpGuardar = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jpEliminar = new javax.swing.JPanel();
        jcbEliminarSucursal = new javax.swing.JComboBox();
        jbtEliminar = new javax.swing.JButton();
        jftEliminarFecha = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jpInfomantes = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jtxtInfID = new javax.swing.JTextField();
        jlInfID = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jtxtInfRet = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jtxtInfMail = new javax.swing.JTextField();
        jbtInfGuardar = new javax.swing.JButton();
        jbtInfModificar = new javax.swing.JButton();
        jtxtInfRUT = new javax.swing.JFormattedTextField();
        jpInformes = new javax.swing.JPanel();
        jbtInfoGenerar = new javax.swing.JButton();
        jcbInfMeses = new javax.swing.JComboBox();
        jtfInfAño = new javax.swing.JSpinner();
        jcbInfEmpresa = new javax.swing.JComboBox();
        jpCreditos = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jbtInforme = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("La Gran Estafa");

        BtSalir.setText("Salir");
        BtSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtSalirActionPerformed(evt);
            }
        });

        jTabbedPane1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTabbedPane1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTabbedPane1FocusLost(evt);
            }
        });

        jpBuscar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jpBuscarFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jpBuscarFocusLost(evt);
            }
        });

        jtDatosPacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jtDatosPacientes);

        jcbBuscarInformante.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione" }));
        jcbBuscarInformante.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbBuscarInformanteItemStateChanged(evt);
            }
        });

        jftAño.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy"))));
        jftAño.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jftAñoKeyTyped(evt);
            }
        });

        jbtBuscar.setText("BUSCAR");
        jbtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtBuscarActionPerformed(evt);
            }
        });

        jcbBuscarSucursal.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar", "Bandera", "Manuel Montt", "San Antonio" }));
        jcbBuscarSucursal.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbBuscarSucursalItemStateChanged(evt);
            }
        });

        jLabel1.setText("Informate");

        jLabel2.setText("Sucursal");

        jcbMeses.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));
        jcbMeses.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbMesesItemStateChanged(evt);
            }
        });

        jcbBuscarEmpresa.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar", "Servicio", "Limitada" }));
        jcbBuscarEmpresa.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbBuscarEmpresaItemStateChanged(evt);
            }
        });

        jLabel9.setText("Empresa");

        jLabel19.setText("Cod");

        jLabel20.setText("Apellido Pat.");

        jLabel21.setText("Apellido Mat.");

        jLabel22.setText("Nombre");

        jtxtCod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtCodKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jpBuscarPacienteLayout = new javax.swing.GroupLayout(jpBuscarPaciente);
        jpBuscarPaciente.setLayout(jpBuscarPacienteLayout);
        jpBuscarPacienteLayout.setHorizontalGroup(
            jpBuscarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBuscarPacienteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtxtCod, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtxtApePat, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtxtApeMat, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtxtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        jpBuscarPacienteLayout.setVerticalGroup(
            jpBuscarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBuscarPacienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpBuscarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20)
                    .addComponent(jtxtApePat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(jtxtApeMat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)
                    .addComponent(jtxtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jrbtExtra.setText("Extras");
        jrbtExtra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbtExtraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpBuscarLayout = new javax.swing.GroupLayout(jpBuscar);
        jpBuscar.setLayout(jpBuscarLayout);
        jpBuscarLayout.setHorizontalGroup(
            jpBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBuscarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1001, Short.MAX_VALUE)
                    .addGroup(jpBuscarLayout.createSequentialGroup()
                        .addGroup(jpBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jcbBuscarInformante, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jpBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jcbBuscarEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpBuscarLayout.createSequentialGroup()
                                .addComponent(jcbBuscarSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbMeses, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jftAño, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jbtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2)))
                    .addGroup(jpBuscarLayout.createSequentialGroup()
                        .addComponent(jrbtExtra)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jpBuscarPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jpBuscarLayout.setVerticalGroup(
            jpBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBuscarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel9)
                    .addComponent(jLabel2))
                .addGap(7, 7, 7)
                .addGroup(jpBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbBuscarInformante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtBuscar)
                    .addComponent(jcbBuscarEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jftAño, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbMeses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbBuscarSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpBuscarPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jrbtExtra))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Buscar", jpBuscar);

        BtCargar.setText("Cargar a Access");
        BtCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtCargarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpInsertarXlsLayout = new javax.swing.GroupLayout(jpInsertarXls);
        jpInsertarXls.setLayout(jpInsertarXlsLayout);
        jpInsertarXlsLayout.setHorizontalGroup(
            jpInsertarXlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpInsertarXlsLayout.createSequentialGroup()
                .addGroup(jpInsertarXlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpInsertarXlsLayout.createSequentialGroup()
                        .addGap(355, 355, 355)
                        .addComponent(BtCargar, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpInsertarXlsLayout.createSequentialGroup()
                        .addGap(280, 280, 280)
                        .addComponent(jProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(419, Short.MAX_VALUE))
        );
        jpInsertarXlsLayout.setVerticalGroup(
            jpInsertarXlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpInsertarXlsLayout.createSequentialGroup()
                .addGap(128, 128, 128)
                .addComponent(BtCargar, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addComponent(jProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(146, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Insertar", jpInsertarXls);

        jcbParticipacion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar" }));
        jcbParticipacion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbParticipacionItemStateChanged(evt);
            }
        });

        jtParticipacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jtParticipacion);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Agregar"));

        jcbAgregarGrupo.setEditable(true);
        jcbAgregarGrupo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbAgregarGrupoActionPerformed(evt);
            }
        });

        jtxtAgregarNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtAgregarNombreActionPerformed(evt);
            }
        });

        jButton1.setText("Guardar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jtxtAgregarParticipacion.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtAgregarParticipacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtAgregarParticipacionKeyTyped(evt);
            }
        });

        jLabel3.setText("Grupo");

        jLabel4.setText("Codigo");

        jLabel5.setText("Nombre");

        jLabel6.setText("Participacion");

        try {
            jftAgregarCodigo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jftAgregarCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jftAgregarCodigoActionPerformed(evt);
            }
        });
        jftAgregarCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jftAgregarCodigoKeyTyped(evt);
            }
        });

        jButton2.setText("Modificar");
        jButton2.setEnabled(false);

        jButton3.setText("Eliminar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jrbRetencion);
        jrbRetencion.setSelected(true);
        jrbRetencion.setText("Retencion");

        buttonGroup1.add(jrbFijo);
        jrbFijo.setText("Fijo");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(226, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel3))
                .addGap(38, 38, 38)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jcbAgregarGrupo, 0, 211, Short.MAX_VALUE)
                    .addComponent(jtxtAgregarNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jtxtAgregarParticipacion, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jrbRetencion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jrbFijo)
                        .addGap(31, 31, 31))
                    .addComponent(jftAgregarCodigo))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbAgregarGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jftAgregarCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtAgregarNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtAgregarParticipacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jrbRetencion)
                    .addComponent(jrbFijo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 133, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        javax.swing.GroupLayout jpParticipacionLayout = new javax.swing.GroupLayout(jpParticipacion);
        jpParticipacion.setLayout(jpParticipacionLayout);
        jpParticipacionLayout.setHorizontalGroup(
            jpParticipacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpParticipacionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpParticipacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 549, Short.MAX_VALUE)
                    .addComponent(jcbParticipacion, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );
        jpParticipacionLayout.setVerticalGroup(
            jpParticipacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpParticipacionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jcbParticipacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpParticipacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Participacion", jpParticipacion);

        jcbEmpListar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar", "Servicio", "Limitada" }));
        jcbEmpListar.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbEmpListarItemStateChanged(evt);
            }
        });
        jcbEmpListar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jcbEmpListarKeyTyped(evt);
            }
        });

        jScrollPane3.setPreferredSize(new java.awt.Dimension(454, 404));

        jtbEmpLista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jtbEmpLista);

        jcbEmpAgregar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar", "Servicio", "Limitada" }));

        jtxtEmpCod.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtEmpCod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtEmpCodKeyTyped(evt);
            }
        });

        jbtEmpEliminar.setText("Eliminar");
        jbtEmpEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtEmpEliminarActionPerformed(evt);
            }
        });

        jbtEmpGuardar.setText("Guardar");
        jbtEmpGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtEmpGuardarActionPerformed(evt);
            }
        });

        jLabel10.setText("Codigo");

        jLabel14.setText("Empresa");

        javax.swing.GroupLayout jpEmpresasLayout = new javax.swing.GroupLayout(jpEmpresas);
        jpEmpresas.setLayout(jpEmpresasLayout);
        jpEmpresasLayout.setHorizontalGroup(
            jpEmpresasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpEmpresasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpEmpresasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 549, Short.MAX_VALUE)
                    .addComponent(jcbEmpListar, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(107, 107, 107)
                .addGroup(jpEmpresasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel14))
                .addGap(24, 24, 24)
                .addGroup(jpEmpresasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcbEmpAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpEmpresasLayout.createSequentialGroup()
                        .addGroup(jpEmpresasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jtxtEmpCod, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbtEmpEliminar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(43, 43, 43)
                        .addComponent(jbtEmpGuardar)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jpEmpresasLayout.setVerticalGroup(
            jpEmpresasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpEmpresasLayout.createSequentialGroup()
                .addGroup(jpEmpresasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpEmpresasLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jcbEmpListar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE))
                    .addGroup(jpEmpresasLayout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addGroup(jpEmpresasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jcbEmpAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addGap(27, 27, 27)
                        .addGroup(jpEmpresasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jtxtEmpCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(jpEmpresasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbtEmpEliminar)
                            .addComponent(jbtEmpGuardar))))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Empresa", jpEmpresas);

        jcbEliminarSucursal.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar", "Bandera", "Manuel Montt", "San Antonio" }));

        jbtEliminar.setText("Eliminar");
        jbtEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtEliminarActionPerformed(evt);
            }
        });

        try {
            jftEliminarFecha.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jftEliminarFecha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jftEliminarFechaKeyTyped(evt);
            }
        });

        jLabel7.setText("Fecha de Carga");

        jLabel8.setText("Sucursal");

        javax.swing.GroupLayout jpEliminarLayout = new javax.swing.GroupLayout(jpEliminar);
        jpEliminar.setLayout(jpEliminarLayout);
        jpEliminarLayout.setHorizontalGroup(
            jpEliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpEliminarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpEliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(46, 46, 46)
                .addGroup(jpEliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jftEliminarFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbEliminarSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(756, Short.MAX_VALUE))
        );
        jpEliminarLayout.setVerticalGroup(
            jpEliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpEliminarLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(jpEliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbEliminarSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jpEliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jftEliminarFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtEliminar)
                .addContainerGap(272, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Eliminar", jpEliminar);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos"));

        jtxtInfID.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtInfID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtInfIDActionPerformed(evt);
            }
        });
        jtxtInfID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtInfIDKeyTyped(evt);
            }
        });

        jlInfID.setText("Informante ID");

        jLabel11.setText("Informante RUT");

        jtxtInfRet.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtInfRet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtInfRetActionPerformed(evt);
            }
        });
        jtxtInfRet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtInfRetKeyTyped(evt);
            }
        });

        jLabel12.setText("Informante Retencion");

        jLabel13.setText("Informante Mail");

        jbtInfGuardar.setText("Guardar");
        jbtInfGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtInfGuardarActionPerformed(evt);
            }
        });

        jbtInfModificar.setText("Modificar");
        jbtInfModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtInfModificarActionPerformed(evt);
            }
        });

        try {
            jtxtInfRUT.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###.###-#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jtxtInfRUT.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtInfRUT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtInfRUTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel11)
                            .addComponent(jlInfID))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtxtInfRUT)
                            .addComponent(jtxtInfMail)
                            .addComponent(jtxtInfRet, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtInfID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jbtInfModificar)
                        .addGap(109, 109, 109)
                        .addComponent(jbtInfGuardar)))
                .addContainerGap(708, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlInfID)
                    .addComponent(jtxtInfID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jtxtInfRUT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jtxtInfRet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jtxtInfMail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 166, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtInfModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtInfGuardar))
                .addContainerGap())
        );

        javax.swing.GroupLayout jpInfomantesLayout = new javax.swing.GroupLayout(jpInfomantes);
        jpInfomantes.setLayout(jpInfomantesLayout);
        jpInfomantesLayout.setHorizontalGroup(
            jpInfomantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpInfomantesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpInfomantesLayout.setVerticalGroup(
            jpInfomantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpInfomantesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Informante", jpInfomantes);

        jbtInfoGenerar.setText("Generar Informe");
        jbtInfoGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtInfoGenerarActionPerformed(evt);
            }
        });

        jcbInfMeses.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));
        jcbInfMeses.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbInfMesesItemStateChanged(evt);
            }
        });

        jtfInfAño.setModel(new javax.swing.SpinnerDateModel());
        jtfInfAño.setEditor(new javax.swing.JSpinner.DateEditor(jtfInfAño, "yyyy"));

        jcbInfEmpresa.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar", "Servicio", "Limitada" }));
        jcbInfEmpresa.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbInfEmpresaItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jpInformesLayout = new javax.swing.GroupLayout(jpInformes);
        jpInformes.setLayout(jpInformesLayout);
        jpInformesLayout.setHorizontalGroup(
            jpInformesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpInformesLayout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addComponent(jcbInfEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jcbInfMeses, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jtfInfAño, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbtInfoGenerar, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(372, Short.MAX_VALUE))
        );
        jpInformesLayout.setVerticalGroup(
            jpInformesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpInformesLayout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addGroup(jpInformesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbInfMeses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfInfAño, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtInfoGenerar)
                    .addComponent(jcbInfEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(227, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Informes", jpInformes);

        jLabel15.setFont(new java.awt.Font("Comic Sans MS", 0, 18));
        jLabel15.setText("Diseñado y creado por Jorge Valdivia y Andres Torres. ");

        javax.swing.GroupLayout jpCreditosLayout = new javax.swing.GroupLayout(jpCreditos);
        jpCreditos.setLayout(jpCreditosLayout);
        jpCreditosLayout.setHorizontalGroup(
            jpCreditosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpCreditosLayout.createSequentialGroup()
                .addContainerGap(263, Short.MAX_VALUE)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(255, 255, 255))
        );
        jpCreditosLayout.setVerticalGroup(
            jpCreditosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCreditosLayout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(200, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Creditos", jpCreditos);

        jbtInforme.setText("Informe");
        jbtInforme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtInformeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1026, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbtInforme, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 831, Short.MAX_VALUE)
                        .addComponent(BtSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtSalir)
                    .addComponent(jbtInforme)))
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Insertar");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtSalirActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_BtSalirActionPerformed

    private void BtCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtCargarActionPerformed
        //cargar la informacion del XLS a Access
        int opcion = 0;
        opcion = JOptionPane.showConfirmDialog(this,
                "Confirmacion de Ingreso....",
                "Confirmacion",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.INFORMATION_MESSAGE);

        if (opcion == JOptionPane.YES_OPTION) {
            setCursor(new Cursor(Cursor.WAIT_CURSOR));
            if (neg.validaID(new File("ORIGINAL.xls"))) {
                Iterator it = neg.CargXLS(new File("ORIGINAL.xls")).iterator();
                while (it.hasNext()) {
                    Principal pri = (Principal) it.next();
                    ineg.AgregarMes(pri);
                    proceso++;
                    procesoCarga(proceso);
                }
            }
            this.cargaJCB();
            JOptionPane.showMessageDialog(this,
                    "Accion Terminada",
                    "Aviso",
                    JOptionPane.INFORMATION_MESSAGE);
            setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        }
    }//GEN-LAST:event_BtCargarActionPerformed

    private void jbtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtBuscarActionPerformed
        cargarTabla();
    }//GEN-LAST:event_jbtBuscarActionPerformed

    private void jftAñoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jftAñoKeyTyped
        // TODO add your handling code here:
        char letra = evt.getKeyChar();
        if (letra < '0' || letra > '9') {
            evt.consume();
        } else {
            if (this.jftAño.getText().trim().length() > 9) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_jftAñoKeyTyped

    private void jcbBuscarInformanteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbBuscarInformanteItemStateChanged
        // TODO add your handling code here:
        MiModelo modelo = new MiModelo();
        this.jtDatosPacientes.setModel(modelo);
    }//GEN-LAST:event_jcbBuscarInformanteItemStateChanged

    private void jbtInformeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtInformeActionPerformed
        // si esta con tiqued esta pagado... no preguntar si se desea pagar..
        if (this.jcbBuscarSucursal.getSelectedItem().toString().equalsIgnoreCase("Seleccionar")) {
            JOptionPane.showMessageDialog(this, "Seleccione Sucursal", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            this.jcbBuscarSucursal.requestFocus();
        } else {
            if (!Boolean.parseBoolean(this.jtDatosPacientes.getValueAt(0, 14).toString())) {
                int opcion = 0;
                opcion = JOptionPane.showConfirmDialog(this,
                        "Cambiar estado a Pagado",
                        "Confirmacion",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.INFORMATION_MESSAGE);

                if (opcion == JOptionPane.YES_OPTION) {
                    if (this.jtDatosPacientes.getRowCount() != 0) {
                        //actualizar la BD y cargar la tabla antes de crear el XlS
                        ineg.ActualizarPago(this.jcbBuscarInformante.getSelectedItem().toString(), this.jcbBuscarSucursal.getSelectedItem().toString(), ValidaFecha(this.jcbMeses.getSelectedIndex() + 1, Integer.parseInt(this.jftAño.getText()), false));
                        //cambiar estado a Pagado....
                        this.cargarTabla();
                    } else {
                        JOptionPane.showMessageDialog(this, "No existen Datos", "Error de Informacion", JOptionPane.WARNING_MESSAGE);
                    }
                } else {
                    //no se cambia el estado.....
                    if (this.jtDatosPacientes.getRowCount() != 0) {
                        //cambiar estado a Pagado....
                        try {
                            try {
                                creaXLS();
                            } catch (FileNotFoundException ex) {
                                JOptionPane.showMessageDialog(this, "El Archivo ya esta abierto", "Error de Carga", JOptionPane.WARNING_MESSAGE);
                                this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
                            }
                        } catch (WriteException ex) {
                        } catch (IOException ex) {
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "No existen Datos", "Error de Informacion", JOptionPane.WARNING_MESSAGE);
                    }
                }
            } else {
                if (this.jtDatosPacientes.getRowCount() != 0) {
                    //cambiar estado a Pagado....
                    try {
                        try {
                            creaXLS();
                        } catch (FileNotFoundException ex) {
                            JOptionPane.showMessageDialog(this, "El Archivo ya esta abierto", "Error de Carga", JOptionPane.WARNING_MESSAGE);
                            this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
                        }
                    } catch (WriteException ex) {
                    } catch (IOException ex) {
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "No existen Datos", "Error de Informacion", JOptionPane.WARNING_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jbtInformeActionPerformed

    private void jcbBuscarSucursalItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbBuscarSucursalItemStateChanged
        // TODO add your handling code here:
        MiModelo modelo = new MiModelo();
        this.jtDatosPacientes.setModel(modelo);
    }//GEN-LAST:event_jcbBuscarSucursalItemStateChanged

    private void jcbMesesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbMesesItemStateChanged
        // TODO add your handling code here:
        MiModelo modelo = new MiModelo();
        this.jtDatosPacientes.setModel(modelo);
    }//GEN-LAST:event_jcbMesesItemStateChanged

    private void jcbParticipacionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbParticipacionItemStateChanged
        // TODO add your handling code here:
        llenarTablaParticipacion();
    }//GEN-LAST:event_jcbParticipacionItemStateChanged

    private void jtxtAgregarParticipacionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtAgregarParticipacionKeyTyped
        // TODO add your handling code here:
        char letra = evt.getKeyChar();
        if (letra < '0' || letra > '9' && letra != '%') {
            evt.consume();
        } else {
            if (this.jtxtAgregarParticipacion.getText().trim().length() > 5) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_jtxtAgregarParticipacionKeyTyped

    private void jftEliminarFechaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jftEliminarFechaKeyTyped
        // TODO add your handling code here:
        char letra = evt.getKeyChar();
        if (letra < '0' || letra > '9') {
            evt.consume();
        } else {
            if (this.jftEliminarFecha.getText().trim().length() > 9) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_jftEliminarFechaKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //preguntar antes de la insercion...
        if (!this.jcbAgregarGrupo.getSelectedItem().toString().isEmpty()) {
            if (this.jftAgregarCodigo.getText().length() <= 12) {
                if (!this.jtxtAgregarNombre.getText().isEmpty()) {
                    if (!this.jtxtAgregarParticipacion.getText().isEmpty()) {
                        Participacion par = new Participacion();

                        par.setGrupo(this.jcbAgregarGrupo.getSelectedItem().toString().toUpperCase());
                        par.setCodigo_prestacion(this.jftAgregarCodigo.getText().toUpperCase());
                        par.setNombre_prestacion(this.jtxtAgregarNombre.getText().toUpperCase());
                        par.setParticipacion(Integer.parseInt(this.jtxtAgregarParticipacion.getText()));
                        par.setEsretencion(this.jrbRetencion.isSelected());

                        int opcion = 0;
                        opcion = JOptionPane.showConfirmDialog(this,
                                "Confirmacion de Ingreso....",
                                "Confirmacion",
                                JOptionPane.YES_NO_OPTION,
                                JOptionPane.INFORMATION_MESSAGE);

                        if (opcion == JOptionPane.YES_OPTION) {
                            if (this.jrbRetencion.isSelected()) {
                                if (Integer.parseInt(this.jtxtAgregarParticipacion.getText()) <= 100) {
                                    if (neg.validarCodigo(this.jftAgregarCodigo.getText())) {

                                        ineg.AgregarParticipacion(par);
                                        cargaJCB();

                                        jftAgregarCodigo.setText("");
                                        jtxtAgregarNombre.setText("");
                                        jtxtAgregarParticipacion.setText("");
                                    } else {
                                        JOptionPane.showMessageDialog(this, "Este Código ya se encuentra Registrado", "ERROR", JOptionPane.WARNING_MESSAGE);
                                        this.jftAgregarCodigo.requestFocus();
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(this, "Valor de Participacion no puede ser mayor a 100%", "ERROR", JOptionPane.WARNING_MESSAGE);
                                    this.jtxtAgregarParticipacion.setText("");
                                    this.jtxtAgregarParticipacion.requestFocus();
                                }
                            } else {
                                if (neg.validarCodigo(this.jftAgregarCodigo.getText())) {

                                    ineg.AgregarParticipacion(par);
                                    cargaJCB();

                                    jftAgregarCodigo.setText("");
                                    jtxtAgregarNombre.setText("");
                                    jtxtAgregarParticipacion.setText("");
                                } else {
                                    JOptionPane.showMessageDialog(this, "Este Código ya se encuentra Registrado", "ERROR", JOptionPane.WARNING_MESSAGE);
                                    this.jftAgregarCodigo.requestFocus();
                                }
                            }
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Aviso Informacion en Participacion", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                        this.jtxtAgregarParticipacion.requestFocus();
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Aviso Informacion en Nombre", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                    this.jtxtAgregarNombre.requestFocus();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Aviso Faltan numeros en el Campo Codigo", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                this.jftAgregarCodigo.requestFocus();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Aviso Ingresar informacion en Grupo", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            this.jcbAgregarGrupo.requestFocus();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jbtEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtEliminarActionPerformed
        // TODO add your handling code here:
        //preguntar antes de la Eliminar...
        int opcion = 0;
        opcion = JOptionPane.showConfirmDialog(this,
                "Confirmacion de ELIMINACION....",
                "Confirmacion",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.INFORMATION_MESSAGE);

        if (opcion == JOptionPane.YES_OPTION) {
            if (!this.jcbEliminarSucursal.getSelectedItem().toString().equalsIgnoreCase("Seleccionar")) {
                try {
                    ineg.eliminarPrincipal(this.jcbEliminarSucursal.getSelectedItem().toString(), formato.parse(this.jftEliminarFecha.getText()));
                } catch (ParseException ex) {
                    Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                JOptionPane.showMessageDialog(this, "Eliminado", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Aviso Ingresar informacion en Grupo", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                this.jcbAgregarGrupo.requestFocus();
            }
//            ineg.EliminarDatos(this.jcbEliminarSucursal.getSelectedItem().toString(), this.jcbEliminarMes.getSelectedItem().toString(),
//                    this.jftEliminarAño.getText());
        }
    }//GEN-LAST:event_jbtEliminarActionPerformed

    private void jftAgregarCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jftAgregarCodigoKeyTyped
        // TODO add your handling code here:
        char letra = evt.getKeyChar();
        if (letra < '0' || letra > '9') {
            evt.consume();
        } else {
            if (this.jftAgregarCodigo.getText().trim().length() > 18) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_jftAgregarCodigoKeyTyped

    private void jftAgregarCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jftAgregarCodigoActionPerformed
        // TODO add your handling code here:
        this.jtxtAgregarNombre.requestFocus();
    }//GEN-LAST:event_jftAgregarCodigoActionPerformed

    private void jcbAgregarGrupoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbAgregarGrupoActionPerformed
        // TODO add your handling code here:
        this.jftAgregarCodigo.requestFocus();
    }//GEN-LAST:event_jcbAgregarGrupoActionPerformed

    private void jtxtAgregarNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtAgregarNombreActionPerformed
        // TODO add your handling code here:
        this.jtxtAgregarParticipacion.requestFocus();
    }//GEN-LAST:event_jtxtAgregarNombreActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try {
            int opcion = 0;
            opcion = JOptionPane.showConfirmDialog(this,
                    "Confirmacion de ELIMINACION...." + this.jtParticipacion.getValueAt(this.jtParticipacion.getSelectedRow(), this.jtParticipacion.getSelectedColumn())
                    + "\n" + this.jtParticipacion.getValueAt(this.jtParticipacion.getSelectedRow(), 0),
                    "Confirmacion",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.INFORMATION_MESSAGE);

            if (opcion == JOptionPane.YES_OPTION) {
                ineg.eliminarParticipacion(this.jtParticipacion.getValueAt(this.jtParticipacion.getSelectedRow(), 0).toString());
                llenarTablaParticipacion();
            }
        } catch (java.lang.ArrayIndexOutOfBoundsException Ex) {
            System.out.println(Ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jcbBuscarEmpresaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbBuscarEmpresaItemStateChanged
        // TODO add your handling code here:
        MiModelo modelo = new MiModelo();
        this.jtDatosPacientes.setModel(modelo);
    }//GEN-LAST:event_jcbBuscarEmpresaItemStateChanged

    private void jtxtInfIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtInfIDKeyTyped
        // TODO add your handling code here:
        char letra = evt.getKeyChar();
        if (letra < '0' || letra > '9') {
            evt.consume();
        } else {
            if (this.jtxtInfID.getText().trim().length() > 3) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_jtxtInfIDKeyTyped

    private void jtxtInfRetKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtInfRetKeyTyped
        // TODO add your handling code here:
        char letra = evt.getKeyChar();
        if (letra < '0' || letra > '9') {
            evt.consume();
        } else {
            if (this.jtxtInfRet.getText().trim().length() > 1) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_jtxtInfRetKeyTyped

    private void jbtInfGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtInfGuardarActionPerformed
        // TODO add your handling code here:
        if (!this.jtxtInfID.getText().isEmpty()) {
            if (neg.validaInf(jtxtInfID.getText())) {
                Informante infor = new Informante();

                infor.setCod_medico(Integer.parseInt(this.jtxtInfID.getText()));
                infor.setMedico_rut(this.jtxtInfRUT.getText());
                try {
                    infor.setMedico_retencion(Integer.parseInt(this.jtxtInfRet.getText()));
                } catch (java.lang.NumberFormatException ex) {
                    infor.setMedico_retencion(0);
                }
                infor.setMedico_mail(this.jtxtInfMail.getText());
                int opcion = 0;
                opcion = JOptionPane.showConfirmDialog(this,
                        "Confirmacion de Ingreso....",
                        "Confirmacion",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.INFORMATION_MESSAGE);

                if (opcion == JOptionPane.YES_OPTION) {
                    ineg.AgregarInformante(infor);
                    JOptionPane.showMessageDialog(this, "Agregado", "Ingreso", JOptionPane.INFORMATION_MESSAGE);
                    this.jtxtInfID.setText("");
                    this.jtxtInfRUT.setText("");
                    this.jtxtInfRet.setText("");
                    this.jtxtInfMail.setText("");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Informante ya esta ingresado ", "Error de Ingreso", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Ingrese ID de Informante ", "Error de Ingreso", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jbtInfGuardarActionPerformed

    private void jcbEmpListarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcbEmpListarKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbEmpListarKeyTyped

    private void jcbEmpListarItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbEmpListarItemStateChanged
        // TODO add your handling code here:
        llenarListaEmpresa();
    }//GEN-LAST:event_jcbEmpListarItemStateChanged

    private void jbtEmpGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtEmpGuardarActionPerformed
        // TODO add your handling code here:
        int opcion = 0;
        opcion = JOptionPane.showConfirmDialog(this,
                "Confirmacion de Ingreso....",
                "Confirmacion",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.INFORMATION_MESSAGE);

        if (opcion == JOptionPane.YES_OPTION) {
            if (neg.validarCodEmpresa(this.jtxtEmpCod.getText())) {
                if (!this.jcbEmpAgregar.getSelectedItem().toString().equalsIgnoreCase("Seleccionar")) {
                    if (!this.jtxtEmpCod.getText().isEmpty()) {
                        Empresa emp = new Empresa();

                        emp.setNombre_empresa(this.jcbEmpAgregar.getSelectedItem().toString());
                        emp.setCod_empresa(this.jtxtEmpCod.getText());

                        ineg.AgregarEmpresaCod(emp);

                        this.jtxtEmpCod.setText("");
                        llenarListaEmpresa();
//                    JOptionPane.showMessageDialog(this, "Agregado", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(this, "Favor Ingresar Codigo ", "Error de Ingreso", JOptionPane.WARNING_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Seleccione Empresa ", "Error de Ingreso", JOptionPane.WARNING_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Codigo ya Ingresado ", "Error de Ingreso", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jbtEmpGuardarActionPerformed

    private void jtxtEmpCodKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtEmpCodKeyTyped
        // TODO add your handling code here:
        char letra = evt.getKeyChar();
        if (letra < '0' || letra > '9') {
            evt.consume();
        } else {
            if (this.jtxtEmpCod.getText().trim().length() > 1) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_jtxtEmpCodKeyTyped

    private void jbtInfModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtInfModificarActionPerformed
        // TODO add your handling code here:
        if (!this.jtxtInfID.getText().isEmpty()) {
            if (!neg.validaInf(jtxtInfID.getText())) {
                Informante infor = new Informante();

                infor.setCod_medico(Integer.parseInt(this.jtxtInfID.getText()));
                infor.setMedico_rut(this.jtxtInfRUT.getText());
                try {
                    infor.setMedico_retencion(Integer.parseInt(this.jtxtInfRet.getText()));
                } catch (java.lang.NumberFormatException ex) {
                    infor.setMedico_retencion(0);
                }
                infor.setMedico_mail(this.jtxtInfMail.getText());

                int opcion = 0;
                opcion = JOptionPane.showConfirmDialog(this,
                        "Confirmar Modificacion....",
                        "Confirmacion",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.INFORMATION_MESSAGE);

                if (opcion == JOptionPane.YES_OPTION) {
                    ineg.ActualizarInformante(infor);
                    JOptionPane.showMessageDialog(this, "Actualizado", "Ingreso", JOptionPane.INFORMATION_MESSAGE);
                    this.jtxtInfID.setText("");
                    this.jtxtInfRUT.setText("");
                    this.jtxtInfRet.setText("");
                    this.jtxtInfMail.setText("");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Informante NO esta ingresado ", "Error de Ingreso", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Ingrese ID de Informante ", "Error de Ingreso", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jbtInfModificarActionPerformed

    private void jtxtInfIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtInfIDActionPerformed
        // TODO add your handling code here:
        this.jtxtInfRUT.requestFocus();
    }//GEN-LAST:event_jtxtInfIDActionPerformed

    private void jtxtInfRetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtInfRetActionPerformed
        // TODO add your handling code here:
        this.jtxtInfMail.requestFocus();
    }//GEN-LAST:event_jtxtInfRetActionPerformed

    private void jtxtInfRUTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtInfRUTActionPerformed
        // TODO add your handling code here:
        this.jtxtInfRUT.requestFocus();
    }//GEN-LAST:event_jtxtInfRUTActionPerformed

    private void jbtEmpEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtEmpEliminarActionPerformed
        // TODO add your handling code here:
        try {
            int opcion = 0;
            opcion = JOptionPane.showConfirmDialog(this,
                    "Confirmar que desea eliminar " + this.jtbEmpLista.getValueAt(this.jtbEmpLista.getSelectedRow(), 1)
                    + " de " + this.jtbEmpLista.getValueAt(this.jtbEmpLista.getSelectedRow(), 0),
                    "Confirmacion",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.INFORMATION_MESSAGE);

            if (opcion == JOptionPane.YES_OPTION) {
                ineg.eliminarEmpresoCod(this.jtbEmpLista.getValueAt(this.jtbEmpLista.getSelectedRow(), 1).toString());
                llenarListaEmpresa();
            }
        } catch (java.lang.ArrayIndexOutOfBoundsException ex) {
            JOptionPane.showMessageDialog(this, "Seleccione el Codigo a Eliminar", "Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jbtEmpEliminarActionPerformed

    private void jTabbedPane1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTabbedPane1FocusGained
    }//GEN-LAST:event_jTabbedPane1FocusGained

    private void jTabbedPane1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTabbedPane1FocusLost
    }//GEN-LAST:event_jTabbedPane1FocusLost

    private void jpBuscarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jpBuscarFocusGained
    }//GEN-LAST:event_jpBuscarFocusGained

    private void jpBuscarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jpBuscarFocusLost
    }//GEN-LAST:event_jpBuscarFocusLost

    private void jrbtExtraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbtExtraActionPerformed
        // TODO add your handling code here:
        if (this.jrbtExtra.isSelected()) {
            this.jpBuscarPaciente.setVisible(true);
        } else {
            this.jpBuscarPaciente.setVisible(false);
        }
        this.jtxtCod.setText("");
        this.jtxtApePat.setText("");
        this.jtxtApeMat.setText("");
        this.jtxtNombre.setText("");
    }//GEN-LAST:event_jrbtExtraActionPerformed

    private void jtxtCodKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtCodKeyTyped
        // TODO add your handling code here:
        char letra = evt.getKeyChar();
        if (letra < '0' || letra > '9') {
            evt.consume();
        } else {
            if (this.jtxtCod.getText().trim().length() > 4) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_jtxtCodKeyTyped

    private void jbtInfoGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtInfoGenerarActionPerformed
        try {
            // TODO add your handling code here:
            setCursor(new Cursor(Cursor.WAIT_CURSOR));
            WritableWorkbook workbook = Workbook.createWorkbook(new File("c:\\informeMes.xls"));
            //Se crea una nueva hoja(31caracteres) dentro del libro
            Iterator itsuc = neg.ListarSucursales().iterator();

            int pag = 0;
            while (itsuc.hasNext()) {
                Principal pri = (Principal) itsuc.next();
                WritableSheet sheet = workbook.createSheet(pri.getSucursal(), pag);
                sheet.setPageSetup(PageOrientation.LANDSCAPE);
                creaXLSPag(sheet, pri.getSucursal(), ValidaFecha(this.jcbInfMeses.getSelectedIndex() + 1, Integer.parseInt("" + año.format(this.jtfInfAño.getValue())), true), this.jcbInfEmpresa.getSelectedItem().toString());
                pag++;
            }
            workbook.write();
            workbook.close();
            try {
                Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler  c:\\informeMes.xls");
            } catch (IOException ee) {
                JOptionPane.showMessageDialog(this, "ERROR.\n" + ee, "Error", JOptionPane.WARNING_MESSAGE);
            }
            setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        } catch (WriteException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtInfoGenerarActionPerformed

    private void jcbInfMesesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbInfMesesItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbInfMesesItemStateChanged

    private void jcbInfEmpresaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbInfEmpresaItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbInfEmpresaItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtCargar;
    private javax.swing.JButton BtSalir;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JProgressBar jProgressBar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jbtBuscar;
    private javax.swing.JButton jbtEliminar;
    private javax.swing.JButton jbtEmpEliminar;
    private javax.swing.JButton jbtEmpGuardar;
    private javax.swing.JButton jbtInfGuardar;
    private javax.swing.JButton jbtInfModificar;
    private javax.swing.JButton jbtInfoGenerar;
    private javax.swing.JButton jbtInforme;
    private javax.swing.JComboBox jcbAgregarGrupo;
    private javax.swing.JComboBox jcbBuscarEmpresa;
    private javax.swing.JComboBox jcbBuscarInformante;
    private javax.swing.JComboBox jcbBuscarSucursal;
    private javax.swing.JComboBox jcbEliminarSucursal;
    private javax.swing.JComboBox jcbEmpAgregar;
    private javax.swing.JComboBox jcbEmpListar;
    private javax.swing.JComboBox jcbInfEmpresa;
    private javax.swing.JComboBox jcbInfMeses;
    private javax.swing.JComboBox jcbMeses;
    private javax.swing.JComboBox jcbParticipacion;
    private javax.swing.JFormattedTextField jftAgregarCodigo;
    private javax.swing.JFormattedTextField jftAño;
    private javax.swing.JFormattedTextField jftEliminarFecha;
    private javax.swing.JLabel jlInfID;
    private javax.swing.JPanel jpBuscar;
    private javax.swing.JPanel jpBuscarPaciente;
    private javax.swing.JPanel jpCreditos;
    private javax.swing.JPanel jpEliminar;
    private javax.swing.JPanel jpEmpresas;
    private javax.swing.JPanel jpInfomantes;
    private javax.swing.JPanel jpInformes;
    private javax.swing.JPanel jpInsertarXls;
    private javax.swing.JPanel jpParticipacion;
    private javax.swing.JRadioButton jrbFijo;
    private javax.swing.JRadioButton jrbRetencion;
    private javax.swing.JRadioButton jrbtExtra;
    private javax.swing.JTable jtDatosPacientes;
    private javax.swing.JTable jtParticipacion;
    private javax.swing.JTable jtbEmpLista;
    private javax.swing.JSpinner jtfInfAño;
    private javax.swing.JTextField jtxtAgregarNombre;
    private javax.swing.JTextField jtxtAgregarParticipacion;
    private javax.swing.JTextField jtxtApeMat;
    private javax.swing.JTextField jtxtApePat;
    private javax.swing.JTextField jtxtCod;
    private javax.swing.JTextField jtxtEmpCod;
    private javax.swing.JTextField jtxtInfID;
    private javax.swing.JTextField jtxtInfMail;
    private javax.swing.JFormattedTextField jtxtInfRUT;
    private javax.swing.JTextField jtxtInfRet;
    private javax.swing.JTextField jtxtNombre;
    // End of variables declaration//GEN-END:variables

    private void creaXLSPag(WritableSheet sheet, String Sucursal, String fecha, String empresa) {
        try {
            NumberFormat forma$ = new NumberFormat("$ #,###");
            WritableCellFormat plata = new WritableCellFormat(forma$);

            //tamaño de las columnas
            sheet.setColumnView(0, 15);
            sheet.setColumnView(1, 40);
            sheet.setColumnView(2, 15);
            sheet.setColumnView(3, 15);
            sheet.setColumnView(4, 15);

            //fucionar celdas
            sheet.mergeCells(1, 1, 8, 1);
            sheet.mergeCells(1, 2, 8, 2);

            sheet.addCell(new jxl.write.Label(1, 1, "Informe " + fecha + " " + Sucursal));
            sheet.addCell(new jxl.write.Label(1, 2, "-**INFORME PARCIAL, NO APTO PARA PAGO**-"));

            sheet.addCell(new jxl.write.Label(0, 4, "Codigo Informante"));
            sheet.addCell(new jxl.write.Label(1, 4, "Informante"));
            sheet.addCell(new jxl.write.Label(2, 4, "Participación"));
            sheet.addCell(new jxl.write.Label(3, 4, "Retención"));
            sheet.addCell(new jxl.write.Label(4, 4, "Total"));
            int fila = 5;
            Iterator it = neg.ListarMes(Sucursal, fecha, empresa).iterator();
            while (it.hasNext()) {
                Principal pri = (Principal) it.next();
                sheet.addCell(new jxl.write.Number(0, fila, pri.getCod_medico()));
                sheet.addCell(new jxl.write.Label(1, fila, pri.getMedico_informante()));
                sheet.addCell(new jxl.write.Number(2, fila, pri.getTotal_prestacion(), plata));
                sheet.addCell(new jxl.write.Formula(3, fila, "(C" + (fila + 1) + "*" + pri.getRetencion() + ")/100", plata));
                sheet.addCell(new jxl.write.Formula(4, fila, "c" + (fila + 1) + "-d" + (fila + 1), plata));
                fila++;
            }
        } catch (WriteException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void cargaJCB() {
        this.jcbBuscarInformante.removeAllItems();
        Iterator it = neg.ListarInformates().iterator();

        this.jcbBuscarInformante.addItem("Seleccione");
        while (it.hasNext()) {
            Informante inf = (Informante) it.next();
            this.jcbBuscarInformante.addItem(inf.getNombre().toUpperCase());
        }

        this.jcbParticipacion.removeAllItems();
//        jcbAgregarGrupo.removeAllItems();
        this.jcbParticipacion.addItem("Seleccionar");

        Iterator it2 = neg.ListarParticipacionGrupos().iterator();

        while (it2.hasNext()) {
            Informante inf = (Informante) it2.next();
            this.jcbParticipacion.addItem(inf.getNombre().toUpperCase());
//            this.jcbAgregarGrupo.addItem(inf.getNombre().toUpperCase());
        }
//        jcbAgregarGrupo.setSelectedIndex(0);
        this.jcbParticipacion.setSelectedIndex(0);


    }

    private void Fechas() {
//        if (this.jcbActivaFecha.isSelected()) {
//
//            this.jcbMeses.setEnabled(false);
//            this.jftAño.setEnabled(false);

//            this.jftAño.setText("0");
//        } else {
//        this.jcbMeses.setEnabled(true);
//        this.jftAño.setEnabled(true);

        this.jcbMeses.setSelectedIndex(0);
//       this.jcbEliminarMes.setSelectedIndex(0);
        this.jcbMeses.setSelectedIndex(Integer.parseInt(fmes.format(new Date())) - 1);
        this.jcbInfMeses.setSelectedIndex(Integer.parseInt(fmes.format(new Date())) - 1);
        this.jftAño.setText(año.format(new Date()));
        this.jftEliminarFecha.setText(formato.format(new Date()));

        // }
    }

    private void creaXLS() throws WriteException, IOException {
        setCursor(new Cursor(Cursor.WAIT_CURSOR));

        WritableWorkbook workbook = Workbook.createWorkbook(new File("c:\\informe.xls"));
        //Se crea una nueva hoja(31caracteres) dentro del libro
        WritableSheet sheet = workbook.createSheet(this.jcbBuscarInformante.getSelectedItem().toString(), 0);
        sheet.setPageSetup(PageOrientation.LANDSCAPE);

        //formato simple para $
        NumberFormat forma$ = new NumberFormat("$ #,###");
        WritableCellFormat plata = new WritableCellFormat(forma$);
        //indicando un patón de formato color, formato de $
//        NumberFormat dp3 = new NumberFormat(" #,###");
//        WritableCellFormat dp3cell = new WritableCellFormat(dp3);
//        dp3cell.setBackground(Colour.LIGHT_GREEN);
//        dp3cell.setAlignment(Alignment.RIGHT);

        //formato para titulos......
        WritableFont fotmatotitulo2 = new WritableFont(WritableFont.TIMES, 11, WritableFont.BOLD, false);
        fotmatotitulo2.setColour(Colour.BLACK);
        WritableCellFormat NegrillaTitulo2 = new WritableCellFormat(fotmatotitulo2);
        NegrillaTitulo2.setAlignment(Alignment.CENTRE);

        //formato para titulos......
        WritableFont fotmatotitulo = new WritableFont(WritableFont.TIMES, 13, WritableFont.BOLD, false);
        fotmatotitulo.setColour(Colour.BLACK);
        WritableCellFormat NegrillaTitulo = new WritableCellFormat(fotmatotitulo);
        NegrillaTitulo.setAlignment(Alignment.CENTRE);

        //negrilla simple
        WritableFont formato1 = new WritableFont(WritableFont.TIMES, 9, WritableFont.BOLD, false);
        formato1.setColour(Colour.BLACK);
        WritableCellFormat Negrilla = new WritableCellFormat(formato1);
        Negrilla.setAlignment(Alignment.CENTRE);

        WritableCellFormat LEFTNegrilla = new WritableCellFormat(formato1);
        Negrilla.setAlignment(Alignment.LEFT);

        //
        WritableCellFormat bordeCompletoConNegrilla = new WritableCellFormat(formato1);
        bordeCompletoConNegrilla.setBorder(Border.ALL, BorderLineStyle.THIN);

        //
        WritableCellFormat bordeCompleto = new WritableCellFormat(forma$);
        bordeCompleto.setBorder(Border.ALL, BorderLineStyle.THIN);

        WritableCellFormat bordeBajoSuperiorNegrilla = new WritableCellFormat(formato1);
//        centrado.setAlignment(Alignment.CENTRE);
        bordeBajoSuperiorNegrilla.setBorder(Border.BOTTOM, BorderLineStyle.THIN);
        bordeBajoSuperiorNegrilla.setBorder(Border.TOP, BorderLineStyle.THIN);

        WritableCellFormat bordeBajo = new WritableCellFormat(formato1, forma$);
        bordeBajo.setBorder(Border.TOP, BorderLineStyle.THIN);
        //fecha actual

        WritableFont formato2 = new WritableFont(WritableFont.ARIAL, 16, WritableFont.NO_BOLD, false);
        formato2.setColour(Colour.BLACK);
        WritableCellFormat titulo1 = new WritableCellFormat(formato2);
        titulo1.setAlignment(Alignment.CENTRE);

        WritableCellFormat bordeBajoSuperior = new WritableCellFormat();
//        centrado.setAlignment(Alignment.CENTRE);
        bordeBajoSuperior.setBorder(Border.BOTTOM, BorderLineStyle.THIN);
        bordeBajoSuperior.setBorder(Border.TOP, BorderLineStyle.THIN);

        //tamaño de las columnas
        sheet.setColumnView(0, 20);
        sheet.setColumnView(1, 40);
        sheet.setColumnView(2, 40);
        sheet.setColumnView(3, 13);
        sheet.setColumnView(4, 15);
//        sheet.setColumnView(5, 10);
        sheet.setColumnView(6, 10);
        sheet.setColumnView(7, 13);
//        sheet.setColumnView(8, 0);

        sheet.addCell(new jxl.write.Label(3, 1, "FECHA NOMINA", bordeCompletoConNegrilla));
        sheet.addCell(new jxl.write.Label(3, 2, "INICIO      01" + ValidaFecha(this.jcbMeses.getSelectedIndex() + 1,
                Integer.parseInt(this.jftAño.getText()), false).substring(2, 10), bordeCompleto));
        sheet.addCell(new jxl.write.Label(3, 3, "TERMINO " + ValidaFecha(this.jcbMeses.getSelectedIndex() + 1,
                Integer.parseInt(this.jftAño.getText()), false), bordeCompleto));
        sheet.addCell(new jxl.write.Label(8, 1, "Fecha:"));
        sheet.addCell(new jxl.write.Label(9, 1, formato.format(new Date())));
        sheet.addCell(new jxl.write.Label(8, 2, "Hora:"));
        sheet.addCell(new jxl.write.Label(9, 2, Calendar.getInstance().get(Calendar.HOUR_OF_DAY) + ":" + Calendar.getInstance().get(Calendar.MINUTE)));
        sheet.addCell(new jxl.write.Label(8, 3, "Página:"));
        sheet.addCell(new jxl.write.Label(9, 3, ""));

//        //fucion de celdas  columna,fila ,
        sheet.mergeCells(3, 1, 4, 1);//titulo fecha
        sheet.mergeCells(3, 2, 4, 2);//titulo fecha inicio
        sheet.mergeCells(3, 3, 4, 3);//titulo fecha termino
//        sheet.mergeCells(2, 5, 4, 5);//titulo 1
//        sheet.mergeCells(2, 6, 4, 6);//titulo 2
//        sheet.mergeCells(2, 7, 4, 7);//titulo 3

        sheet.addCell(new jxl.write.Label(0, 0, "CLINICA DARSALUD"));
        sheet.addCell(new jxl.write.Label(0, 1, this.jcbBuscarSucursal.getSelectedItem().toString().toUpperCase()));
        sheet.addCell(new jxl.write.Label(0, 2, "Aries 0.1"));

        if (Boolean.parseBoolean(this.jtDatosPacientes.getValueAt(0, 14).toString())) {
            sheet.addCell(new jxl.write.Label(3, 5, "CARTOLA PAGOS MEDICOS PRESTACIONES", NegrillaTitulo));
        } else {
            sheet.addCell(new jxl.write.Label(3, 5, "NO PAGADO", NegrillaTitulo));
        }

        sheet.addCell(new jxl.write.Label(3, 6, "CARTOLA PROVISORIA (DETALLE)", Negrilla));
        sheet.addCell(new jxl.write.Label(3, 7, "AMBULATORIO - EJECUTANTE - RECAUDO", NegrillaTitulo2));
        sheet.addCell(new jxl.write.Label(0, 8, "A PAGAR: ", LEFTNegrilla));
        sheet.addCell(new jxl.write.Label(1, 8, this.jtDatosPacientes.getValueAt(0, 15) + " " + this.jcbBuscarInformante.getSelectedItem().toString(), Negrilla));
        sheet.addCell(new jxl.write.Label(0, 9, "DARSALUD: ", bordeBajoSuperiorNegrilla));
        sheet.addCell(new jxl.write.Label(1, 9, "", bordeBajoSuperiorNegrilla));

        if (!this.jcbBuscarEmpresa.getSelectedItem().toString().equalsIgnoreCase("Seleccionar")) {
            if (this.jcbBuscarEmpresa.getSelectedItem().toString().equalsIgnoreCase("Limitada")) {
                sheet.addCell(new jxl.write.Label(1, 9, "DARSALUD " + jcbBuscarEmpresa.getSelectedItem().toString() + " 76.499.660-7", bordeBajoSuperiorNegrilla));
            } else {
                sheet.addCell(new jxl.write.Label(1, 9, "DARSALUD " + jcbBuscarEmpresa.getSelectedItem().toString() + "s 76.831.800-k", bordeBajoSuperiorNegrilla));
            }
        }
        sheet.addCell(new jxl.write.Label(2, 9, "", bordeBajoSuperiorNegrilla));
        sheet.addCell(new jxl.write.Label(3, 9, "", bordeBajoSuperiorNegrilla));
        sheet.addCell(new jxl.write.Label(4, 9, "", bordeBajoSuperiorNegrilla));
        sheet.addCell(new jxl.write.Label(5, 9, "", bordeBajoSuperiorNegrilla));
        sheet.addCell(new jxl.write.Label(6, 9, "", bordeBajoSuperiorNegrilla));
        sheet.addCell(new jxl.write.Label(7, 9, "", bordeBajoSuperiorNegrilla));
        sheet.addCell(new jxl.write.Label(8, 9, "", bordeBajoSuperiorNegrilla));
        sheet.addCell(new jxl.write.Label(9, 9, "", bordeBajoSuperiorNegrilla));
        sheet.addCell(new jxl.write.Label(0, 10, "PROFESIONAL: ", LEFTNegrilla));
        sheet.addCell(new jxl.write.Label(1, 10, this.jtDatosPacientes.getValueAt(0, 15) + " " + this.jcbBuscarInformante.getSelectedItem().toString(), Negrilla));

        sheet.addCell(new jxl.write.Label(0, 11, "Código", bordeBajoSuperior));
        sheet.addCell(new jxl.write.Label(0, 12, "RECAUDACION", Negrilla));
        sheet.addCell(new jxl.write.Label(1, 11, "Nombre_Prestación", bordeBajoSuperior));
        sheet.addCell(new jxl.write.Label(2, 11, "Paciente", bordeBajoSuperior));
        sheet.addCell(new jxl.write.Label(3, 11, "F.Recaudo", bordeBajoSuperior));
        sheet.addCell(new jxl.write.Label(4, 11, "F.Informe", bordeBajoSuperior));
        sheet.addCell(new jxl.write.Label(5, 11, "", bordeBajoSuperior));
        sheet.addCell(new jxl.write.Label(6, 11, "Participable", bordeBajoSuperior));
        sheet.addCell(new jxl.write.Label(7, 11, "%", bordeBajoSuperior));
        sheet.addCell(new jxl.write.Label(8, 10, "Monto"));
        sheet.addCell(new jxl.write.Label(8, 11, "Participado", bordeBajoSuperior));
        sheet.addCell(new jxl.write.Label(9, 11, "", bordeBajoSuperior));

        int fila = 0;
        for (int colm = 0; colm < this.jtDatosPacientes.getColumnCount(); colm++) {
            for (fila = 0; fila < this.jtDatosPacientes.getRowCount(); fila++) {
                //Codigo Informe
                sheet.addCell(new jxl.write.Label(0, fila + 13, this.jtDatosPacientes.getValueAt(fila, 5).toString()));

                sheet.addCell(new jxl.write.Label(1, fila + 13, this.jtDatosPacientes.getValueAt(fila, 6).toString()));

                sheet.addCell(new jxl.write.Label(2, fila + 13, this.jtDatosPacientes.getValueAt(fila, 2).toString()
                        + " " + this.jtDatosPacientes.getValueAt(fila, 3).toString() + " "
                        + this.jtDatosPacientes.getValueAt(fila, 4).toString()));

                //fecha de Informe
                sheet.addCell(new jxl.write.Label(3, fila + 13, this.jtDatosPacientes.getValueAt(fila, 1).toString()));
                //fecha de Recaudacion
                sheet.addCell(new jxl.write.Label(4, fila + 13, this.jtDatosPacientes.getValueAt(fila, 9).toString()));

                // Totales  se multiplica la cantidad con el valor.6 y 7
                sheet.addCell(new jxl.write.Number(6, fila + 13, (Integer.parseInt(this.jtDatosPacientes.getValueAt(fila, 7).toString())
                        * Integer.parseInt(this.jtDatosPacientes.getValueAt(fila, 8).toString())), plata));

                if (Integer.parseInt(this.jtDatosPacientes.getValueAt(fila, 13).toString()) < 100) {
                    //% de participacion segun el cod del examen
                    sheet.addCell(new jxl.write.Number(7, fila + 13, Integer.parseInt(this.jtDatosPacientes.getValueAt(fila, 13).toString())));
                    //formula de participacion..
                    sheet.addCell(new jxl.write.Formula(8, fila + 13, "(G" + (fila + 14) + "*H" + (fila + 14) + ")/100", plata));
                } else {
                    //sheet.addCell(new jxl.write.Number(7, fila + 13, 0));
                    //formula de participacion..
                    sheet.addCell(new jxl.write.Number(8, fila + 13, Integer.parseInt(this.jtDatosPacientes.getValueAt(fila, 13).toString()), plata));

                }
            }
        }
        sheet.addCell(new jxl.write.Label(0, this.jtDatosPacientes.getRowCount() + 13, "", bordeBajo));
        sheet.addCell(new jxl.write.Label(1, this.jtDatosPacientes.getRowCount() + 13, "", bordeBajo));
        sheet.addCell(new jxl.write.Label(2, this.jtDatosPacientes.getRowCount() + 13, "", bordeBajo));
        sheet.addCell(new jxl.write.Label(3, this.jtDatosPacientes.getRowCount() + 13, "", bordeBajo));
        sheet.addCell(new jxl.write.Label(4, this.jtDatosPacientes.getRowCount() + 13, "Total por Profesional:", bordeBajo));
        sheet.addCell(new jxl.write.Label(5, this.jtDatosPacientes.getRowCount() + 13, "", bordeBajo));
        sheet.addCell(new jxl.write.Formula(6, this.jtDatosPacientes.getRowCount() + 13, "SUMA(G14:G" + (fila + 13) + ")", bordeBajo));
        sheet.addCell(new jxl.write.Label(7, this.jtDatosPacientes.getRowCount() + 13, "", bordeBajo));
        sheet.addCell(new jxl.write.Formula(8, this.jtDatosPacientes.getRowCount() + 13, "SUMA(I14:I" + (fila + 13) + ")", bordeBajo));
        sheet.addCell(new jxl.write.Label(9, this.jtDatosPacientes.getRowCount() + 13, "", bordeBajo));

        //fusion valores
        sheet.mergeCells(4, fila + 15, 6, fila + 15);//valores
//      sheet.mergeCells(4, fila + 16, 6, fila + 16);//retencion
        sheet.mergeCells(4, fila + 17, 6, fila + 17);//liquido

        sheet.addCell(new jxl.write.Label(4, this.jtDatosPacientes.getRowCount() + 15, "VALOR BRUTO PARTICIPACION", bordeCompleto));
        sheet.addCell(new jxl.write.Label(4, this.jtDatosPacientes.getRowCount() + 16, "RETENCION", bordeCompleto));
        //porcentaje de retencion
        sheet.addCell(new jxl.write.Number(5, this.jtDatosPacientes.getRowCount() + 16, Integer.parseInt(this.jtDatosPacientes.getValueAt(0, 16).toString())));
        sheet.addCell(new jxl.write.Label(4, this.jtDatosPacientes.getRowCount() + 17, "LIQUIDO A PAGAR", bordeCompleto));


        sheet.addCell(new jxl.write.Formula(7, this.jtDatosPacientes.getRowCount() + 15, "I" + (fila + 14), bordeCompleto));
        sheet.addCell(new jxl.write.Formula(7, this.jtDatosPacientes.getRowCount() + 16, "(F" + (this.jtDatosPacientes.getRowCount() + 17) + "*H" + (this.jtDatosPacientes.getRowCount() + 16) + ")/100", bordeCompleto));
        sheet.addCell(new jxl.write.Formula(7, this.jtDatosPacientes.getRowCount() + 17, "H" + (this.jtDatosPacientes.getRowCount() + 16) + "-H" + (this.jtDatosPacientes.getRowCount() + 17) + "", bordeCompleto));

        sheet.addCell(new jxl.write.Label(0, this.jtDatosPacientes.getRowCount() + 23, "TOTALES : PARTICIPACION", bordeBajo));
        sheet.addCell(new jxl.write.Formula(1, this.jtDatosPacientes.getRowCount() + 23, "H" + (this.jtDatosPacientes.getRowCount() + 16), bordeBajo));

        sheet.addCell(new jxl.write.Label(2, this.jtDatosPacientes.getRowCount() + 23, "RETENCION $ ", bordeBajo));
        sheet.addCell(new jxl.write.Formula(3, this.jtDatosPacientes.getRowCount() + 23, "H" + (this.jtDatosPacientes.getRowCount() + 17), bordeBajo));

        sheet.addCell(new jxl.write.Label(4, this.jtDatosPacientes.getRowCount() + 23, "LIQUIDO $ ", bordeBajo));
        sheet.addCell(new jxl.write.Formula(5, this.jtDatosPacientes.getRowCount() + 23, "H" + (this.jtDatosPacientes.getRowCount() + 18), bordeBajo));

        sheet.addCell(new jxl.write.Label(6, this.jtDatosPacientes.getRowCount() + 23, "", bordeBajo));
        sheet.addCell(new jxl.write.Label(7, this.jtDatosPacientes.getRowCount() + 23, "", bordeBajo));
        sheet.addCell(new jxl.write.Label(8, this.jtDatosPacientes.getRowCount() + 23, "", bordeBajo));
        sheet.addCell(new jxl.write.Label(9, this.jtDatosPacientes.getRowCount() + 23, "", bordeBajo));

        workbook.write();
        workbook.close();
        try {
            Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler  c:\\informe.xls");
        } catch (IOException ee) {
            JOptionPane.showMessageDialog(this, "ERROR.\n" + ee, "Error", JOptionPane.WARNING_MESSAGE);
        }
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }

    public String ValidaFecha(int mm, int aa, boolean formatoUSA) {
        String fecha = "1999/01/31";//formato
        //= Integer.parseInt(año.trim().substring((año.length() - 4), año.length()));
        int dm = 31; //asumo que todos los meses del año tienen 31 dias!!!
        if (mm == 4 || mm == 6 || mm == 9 || mm == 11) { //estos meses tienen 30 dias
            dm = 30;
        } else {// febrero es de problema se trata de una manera diferente
            if (mm == 2) {
                dm = 28;// asumo que todos los años febrero tiene 28 dia
                if (aa % 4 == 0) {// si es un año bisiesto febrero tiene 29 dias!!!(esta es la forma de ver si un año es bisiesto o no!)
                    dm = 29;
                }
            }
        }
        String mes = "" + mm;
        for (int num = 1; num <= 9; num++) {
            if (mm == num) { //agrego un 0 si es mes es menor a 9
                mes = "0" + mm;
            }
        }
        if (formatoUSA) {
            fecha = mes + "/" + dm + "/" + aa;
        } else {
            fecha = dm + "/" + mes + "/" + aa;
        }

        return fecha;
    }

    private void llenarTablaParticipacion() {
        try {
            Iterator it = neg.ListarParticipaciones(this.jcbParticipacion.getSelectedItem().toString()).iterator();

            MiModelo modelo = new MiModelo();
            this.jtParticipacion.setModel(modelo);

            String[] NomColum = {"ID", "NOMBRE", "PARTICIPACION"};

            Object[][] dato = new Object[neg.cantdatos][NomColum.length + 1];
            int fila = 0;
            while (it.hasNext()) {
                Participacion par = (Participacion) it.next();

                dato[fila][0] = par.getCodigo_prestacion();
                dato[fila][1] = par.getNombre_prestacion().toUpperCase();
                dato[fila][2] = par.getParticipacion();
                fila++;
            }

            //cargar datos en la tabla
            modelo.setDataVector(dato, NomColum);
            //seteo la jtable con el table model
            this.jtParticipacion.setModel(modelo);

            try {
                //cambiamos el ancho de las columnas
                TableColumn column = null;
                this.jtParticipacion.getTableHeader().setReorderingAllowed(false);
                this.jtParticipacion.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                column = this.jtParticipacion.getColumnModel().getColumn(0);
                column.setPreferredWidth(100);
                column = this.jtParticipacion.getColumnModel().getColumn(1);
                column.setPreferredWidth(390);
                column = this.jtParticipacion.getColumnModel().getColumn(2);
                column.setPreferredWidth(55);

            } catch (ArrayIndexOutOfBoundsException ex) {
            }
        } catch (java.lang.NullPointerException EX) {
        }
    }

    private void cargarTabla() {
        Iterator it = neg.ListarDatos(this.jcbBuscarInformante.getSelectedItem().toString(),
                this.jcbBuscarSucursal.getSelectedItem().toString(), false, ValidaFecha(this.jcbMeses.getSelectedIndex() + 1,
                Integer.parseInt(this.jftAño.getText()), true), this.jcbBuscarEmpresa.getSelectedItem().toString(), this.jtxtCod.getText(), this.jtxtApePat.getText(), this.jtxtApeMat.getText(), this.jtxtNombre.getText()).iterator();

        MiModelo modelo = new MiModelo();
        this.jtDatosPacientes.setModel(modelo);

        String[] NomColum = {"ID", "FECHA", "PATERNO", "MATERNO", "NOMBRE", "COD PRES",
            "NOM PRES", "CANTIDAD", "TOTAL", "FECHA INFORME", "COD MEDICO", "MEDICO",
            "SUCURSAL", "% o fijo", "Pagado", "Rut Informante", "Retencion", "Fecha de Carga"};

        Object[][] dato = new Object[neg.cantdatos][NomColum.length + 1];
        int fila = 0;
        while (it.hasNext()) {
            Principal pri = (Principal) it.next();

            dato[fila][0] = pri.getId_atencion();
            dato[fila][1] = formato.format(pri.getFecha_atencion());
            dato[fila][2] = pri.getAp_paterno().replace("Ñ", "N").toUpperCase();
            dato[fila][3] = pri.getAp_materno().replace("Ñ", "N").toUpperCase();
            dato[fila][4] = pri.getNombre().replace("Ñ", "N").toUpperCase();
            dato[fila][5] = pri.getCodigo_prestacion();
            dato[fila][6] = pri.getNombre_prestacion();
            dato[fila][7] = pri.getCantidad();
            dato[fila][8] = pri.getTotal_prestacion();
            dato[fila][9] = formato.format(pri.getFecha_informe());
            dato[fila][10] = pri.getCod_medico();
            dato[fila][11] = pri.getMedico_informante();
            dato[fila][12] = pri.getSucursal();
            dato[fila][13] = pri.getParticipacion();
            dato[fila][14] = pri.isPagado();
            dato[fila][15] = pri.getRut();
            dato[fila][16] = pri.getRetencion();
            try {
                dato[fila][17] = formato.format(pri.getFechaPagado());
            } catch (java.lang.NullPointerException ex) {
                dato[fila][17] = "";
            }
            fila++;
        }

        //cargar datos en la tabla
        modelo.setDataVector(dato, NomColum);
        //seteo la jtable con el table model
        this.jtDatosPacientes.setModel(modelo);

        try {
            //cambiamos el ancho de las columnas
            TableColumn column = null;
            this.jtDatosPacientes.getTableHeader().setReorderingAllowed(false);
            this.jtDatosPacientes.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            column = this.jtDatosPacientes.getColumnModel().getColumn(0);
            column.setPreferredWidth(50);
            column = this.jtDatosPacientes.getColumnModel().getColumn(1);
            column.setPreferredWidth(80);
            column = this.jtDatosPacientes.getColumnModel().getColumn(2);
            column.setPreferredWidth(70);
            column = this.jtDatosPacientes.getColumnModel().getColumn(3);
            column.setPreferredWidth(80);
            column = this.jtDatosPacientes.getColumnModel().getColumn(4);
            column.setPreferredWidth(180);
            column = this.jtDatosPacientes.getColumnModel().getColumn(5);
            column.setPreferredWidth(100);
            column = this.jtDatosPacientes.getColumnModel().getColumn(6);
            column.setPreferredWidth(300);
            column = this.jtDatosPacientes.getColumnModel().getColumn(7);
            column.setPreferredWidth(20);
            column = this.jtDatosPacientes.getColumnModel().getColumn(8);
            column.setPreferredWidth(50);
            column = this.jtDatosPacientes.getColumnModel().getColumn(9);
            column.setPreferredWidth(130);
            column = this.jtDatosPacientes.getColumnModel().getColumn(10);
            column.setPreferredWidth(100);
            column = this.jtDatosPacientes.getColumnModel().getColumn(11);
            column.setPreferredWidth(250);
            column = this.jtDatosPacientes.getColumnModel().getColumn(12);
            column.setPreferredWidth(80);
            column = this.jtDatosPacientes.getColumnModel().getColumn(13);
            column.setPreferredWidth(60);
            column = this.jtDatosPacientes.getColumnModel().getColumn(14);
            column.setPreferredWidth(80);
            column = this.jtDatosPacientes.getColumnModel().getColumn(15);
            column.setPreferredWidth(60);
            column = this.jtDatosPacientes.getColumnModel().getColumn(16);
            column.setPreferredWidth(80);
            column = this.jtDatosPacientes.getColumnModel().getColumn(17);
            column.setPreferredWidth(60);


        } catch (ArrayIndexOutOfBoundsException ex) {
        }
        //si le rut no esta en BD interno se busca en oracle..... el informe SIEMPRE tendra RUT!!!!
        this.jtDatosPacientes.setValueAt(neg.BuscarRutInf(this.jtDatosPacientes.getValueAt(0, 10).toString()), 0, 15);
    }

    private void llenarListaEmpresa() {
        try {
            Iterator it = neg.ListarEmpresa(this.jcbEmpListar.getSelectedItem().toString()).iterator();

            MiModelo modelo = new MiModelo();
            this.jtbEmpLista.setModel(modelo);

            String[] NomColum = {"EMPRESA", "CODIGO"};

            Object[][] dato = new Object[neg.cantdatos][NomColum.length + 1];
            int fila = 0;
            while (it.hasNext()) {
                Empresa emp = (Empresa) it.next();

                dato[fila][0] = emp.getNombre_empresa().toUpperCase();
                dato[fila][1] = emp.getCod_empresa();

                fila++;
            }

            //cargar datos en la tabla
            modelo.setDataVector(dato, NomColum);
            //seteo la jtable con el table model
            this.jtbEmpLista.setModel(modelo);

            try {
                //cambiamos el ancho de las columnas
                TableColumn column = null;
                this.jtbEmpLista.getTableHeader().setReorderingAllowed(false);
                this.jtbEmpLista.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

                column = this.jtbEmpLista.getColumnModel().getColumn(0);
                column.setPreferredWidth(300);
                column = this.jtbEmpLista.getColumnModel().getColumn(1);
                column.setPreferredWidth(280);

            } catch (ArrayIndexOutOfBoundsException ex) {
            }
        } catch (java.lang.NullPointerException EX) {
        }
    }

    private void procesoCarga(int proceso) {
//        System.out.println((neg.cantdatos - 6) + " de " + proceso);
        jProgressBar.setMaximum((neg.cantdatos - 6));
        jProgressBar.setValue(proceso);
        jProgressBar.setStringPainted(true);
        Rectangle progressRect = jProgressBar.getBounds();
        progressRect.x = 0;
        progressRect.y = 0;
        jProgressBar.paintImmediately(progressRect);
    }
}
